{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ABHISHEK\\\\STUDY\\\\CODES\\\\Projects\\\\url-shortener-frontend\\\\src\\\\components\\\\user\\\\UserProfile.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UserProfile() {\n  _s();\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [verificationStatus, setVerificationStatus] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  useEffect(() => {\n    // Retrieve the bearer token from localStorage (assuming you stored it there after login)\n    const token = localStorage.getItem('token');\n    if (!token) {\n      // Redirect to the login page if no token is found in localStorage\n      window.location.href = '/login';\n    }\n\n    // Make the GET request to fetch the user's account details\n    fetch('http://localhost:4000/user/get', {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    }).then(response => response.json()).then(data => {\n      if (data.success) {\n        setUser(data.user);\n      } else {\n        setError(data.message);\n      }\n      setLoading(false);\n    }).catch(error => {\n      setError('An error occurred while fetching the user details.');\n      setLoading(false);\n    });\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Welcome, \", user.name, \"!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Email: \", user.email]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Verification Status:\", ' ', user.verificationStatus ? 'Verified' : 'Not Verified']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_s(UserProfile, \"nxA32IEXJQidICx9n4U8PA5RkR0=\");\n_c = UserProfile;\nvar _c;\n$RefreshReg$(_c, \"UserProfile\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","UserProfile","_s","name","setName","email","setEmail","verificationStatus","setVerificationStatus","loading","setLoading","error","setError","useEffect","token","localStorage","getItem","window","location","href","fetch","headers","Authorization","then","response","json","data","success","setUser","user","message","catch","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/ABHISHEK/STUDY/CODES/Projects/url-shortener-frontend/src/components/user/UserProfile.js"],"sourcesContent":["import React, { useState } from 'react'\r\n\r\nfunction UserProfile () {\r\n  const [name, setName] = useState('')\r\n  const [email, setEmail] = useState('')\r\n  const [verificationStatus, setVerificationStatus] = useState(false)\r\n  const [loading, setLoading] = useState(true)\r\n  const [error, setError] = useState('')\r\n\r\n  useEffect(() => {\r\n    // Retrieve the bearer token from localStorage (assuming you stored it there after login)\r\n    const token = localStorage.getItem('token')\r\n\r\n    if (!token) {\r\n      // Redirect to the login page if no token is found in localStorage\r\n      window.location.href = '/login'\r\n    }\r\n\r\n    // Make the GET request to fetch the user's account details\r\n    fetch('http://localhost:4000/user/get', {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`\r\n      }\r\n    })\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        if (data.success) {\r\n          setUser(data.user)\r\n        } else {\r\n          setError(data.message)\r\n        }\r\n        setLoading(false)\r\n      })\r\n      .catch(error => {\r\n        setError('An error occurred while fetching the user details.')\r\n        setLoading(false)\r\n      })\r\n  })\r\n\r\n  return (\r\n    <div>\r\n      <h1>Welcome, {user.name}!</h1>\r\n      <p>Email: {user.email}</p>\r\n      <p>\r\n        Verification Status:{' '}\r\n        {user.verificationStatus ? 'Verified' : 'Not Verified'}\r\n      </p>\r\n    </div>\r\n  )\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEvC,SAASC,WAAWA,CAAA,EAAI;EAAAC,EAAA;EACtB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACO,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACS,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EACnE,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACa,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAEtCe,SAAS,CAAC,MAAM;IACd;IACA,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAE3C,IAAI,CAACF,KAAK,EAAE;MACV;MACAG,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,QAAQ;IACjC;;IAEA;IACAC,KAAK,CAAC,gCAAgC,EAAE;MACtCC,OAAO,EAAE;QACPC,aAAa,EAAG,UAASR,KAAM;MACjC;IACF,CAAC,CAAC,CACCS,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAI;MACZ,IAAIA,IAAI,CAACC,OAAO,EAAE;QAChBC,OAAO,CAACF,IAAI,CAACG,IAAI,CAAC;MACpB,CAAC,MAAM;QACLjB,QAAQ,CAACc,IAAI,CAACI,OAAO,CAAC;MACxB;MACApB,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC,CACDqB,KAAK,CAACpB,KAAK,IAAI;MACdC,QAAQ,CAAC,oDAAoD,CAAC;MAC9DF,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC;EACN,CAAC,CAAC;EAEF,oBACEV,OAAA;IAAAgC,QAAA,gBACEhC,OAAA;MAAAgC,QAAA,GAAI,WAAS,EAACH,IAAI,CAAC1B,IAAI,EAAC,GAAC;IAAA;MAAA8B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC9BpC,OAAA;MAAAgC,QAAA,GAAG,SAAO,EAACH,IAAI,CAACxB,KAAK;IAAA;MAAA4B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1BpC,OAAA;MAAAgC,QAAA,GAAG,sBACmB,EAAC,GAAG,EACvBH,IAAI,CAACtB,kBAAkB,GAAG,UAAU,GAAG,cAAc;IAAA;MAAA0B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEV;AAAClC,EAAA,CA/CQD,WAAW;AAAAoC,EAAA,GAAXpC,WAAW;AAAA,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}