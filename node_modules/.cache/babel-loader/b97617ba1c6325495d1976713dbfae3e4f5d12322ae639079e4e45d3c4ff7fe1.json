{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ABHISHEK\\\\STUDY\\\\CODES\\\\Projects\\\\url-shortener-frontend\\\\src\\\\components\\\\user\\\\UserProfile.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\n\n//Import URL Dashboard\nimport UrlDashBoard from './UrlDashBoard';\nimport NavBar from './NavBar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UserProfile(props) {\n  _s();\n  const [user, setUser] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [message, setMessage] = useState('');\n  const [error, setError] = useState('');\n  useEffect(() => {\n    // Retrieve the bearer token from localStorage (assuming you stored it there after login)\n    const token = localStorage.getItem('token');\n    if (!token) {\n      // Redirect to the login page if no token is found in localStorage\n      window.location.href = '/login';\n    }\n\n    // Make the GET request to fetch the user's account details\n    fetch('http://localhost:4000/user/get', {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    }).then(response => response.json()).then(data => {\n      if (data.success) {\n        data.user.urls.forEach(url => {\n          url.expirationDate = new Date(url.expirationDate).toLocaleDateString();\n        });\n        setUser(data.user);\n      } else {\n        setError(data.message);\n      }\n      setLoading(false);\n    }).catch(error => {\n      setError('An error occurred while fetching the user details.');\n      setLoading(false);\n    });\n  }, []);\n  const socket = props.socket;\n  if (!socket) {\n    console.error('Socket prop is undefined in UrlDashBoard');\n    console.log(props);\n    return null; // Render nothing if the socket prop is missing\n  }\n\n  const handleLogout = () => {\n    // Clear the bearer token from localStorage\n    localStorage.removeItem('token');\n    // Reload the app to reset the state and redirect to the login page\n    window.location.reload();\n  };\n  const handleManageAccount = () => {\n    window.location.href = '/account';\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"user-profile\",\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {\n      name: user.name,\n      email: user.email,\n      verificationStatus: user.verificationStatus\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(UrlDashBoard, {\n      urls: user.urls,\n      socket: socket\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 17\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"message\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n}\n_s(UserProfile, \"sUpFztPVLbRiUyGDrCg03nLckYA=\");\n_c = UserProfile;\nexport default UserProfile;\nvar _c;\n$RefreshReg$(_c, \"UserProfile\");","map":{"version":3,"names":["React","useEffect","useState","UrlDashBoard","NavBar","jsxDEV","_jsxDEV","UserProfile","props","_s","user","setUser","loading","setLoading","message","setMessage","error","setError","token","localStorage","getItem","window","location","href","fetch","headers","Authorization","then","response","json","data","success","urls","forEach","url","expirationDate","Date","toLocaleDateString","catch","socket","console","log","handleLogout","removeItem","reload","handleManageAccount","children","fileName","_jsxFileName","lineNumber","columnNumber","className","name","email","verificationStatus","_c","$RefreshReg$"],"sources":["C:/Users/ABHISHEK/STUDY/CODES/Projects/url-shortener-frontend/src/components/user/UserProfile.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\n\r\n//Import URL Dashboard\r\nimport UrlDashBoard from './UrlDashBoard'\r\nimport NavBar from './NavBar'\r\n\r\nfunction UserProfile (props) {\r\n  const [user, setUser] = useState({})\r\n  const [loading, setLoading] = useState(true)\r\n  const [message, setMessage] = useState('')\r\n  const [error, setError] = useState('')\r\n\r\n  useEffect(() => {\r\n    // Retrieve the bearer token from localStorage (assuming you stored it there after login)\r\n    const token = localStorage.getItem('token')\r\n\r\n    if (!token) {\r\n      // Redirect to the login page if no token is found in localStorage\r\n      window.location.href = '/login'\r\n    }\r\n\r\n    // Make the GET request to fetch the user's account details\r\n    fetch('http://localhost:4000/user/get', {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`\r\n      }\r\n    })\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        if (data.success) {\r\n          data.user.urls.forEach(url => {\r\n            url.expirationDate = new Date(\r\n              url.expirationDate\r\n            ).toLocaleDateString()\r\n          })\r\n          setUser(data.user)\r\n        } else {\r\n          setError(data.message)\r\n        }\r\n        setLoading(false)\r\n      })\r\n      .catch(error => {\r\n        setError('An error occurred while fetching the user details.')\r\n        setLoading(false)\r\n      })\r\n  }, [])\r\n\r\n  const socket = props.socket\r\n  if (!socket) {\r\n    console.error('Socket prop is undefined in UrlDashBoard')\r\n    console.log(props)\r\n    return null // Render nothing if the socket prop is missing\r\n  }\r\n\r\n  const handleLogout = () => {\r\n    // Clear the bearer token from localStorage\r\n    localStorage.removeItem('token')\r\n    // Reload the app to reset the state and redirect to the login page\r\n    window.location.reload()\r\n  }\r\n\r\n  const handleManageAccount = () => {\r\n    window.location.href = '/account'\r\n  }\r\n\r\n  if (loading) {\r\n    return <div>Loading...</div>\r\n  }\r\n\r\n  if (error) {\r\n    return <div>Error: {error}</div>\r\n  }\r\n\r\n  return (\r\n    <div className='user-profile'>\r\n      <NavBar\r\n        name={user.name}\r\n        email={user.email}\r\n        verificationStatus={user.verificationStatus}\r\n      />\r\n      <UrlDashBoard urls={user.urls} socket={socket} />\r\n      {error && <p className='error'>{error}</p>}\r\n      {message && <p className='message'>{message}</p>}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default UserProfile\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}